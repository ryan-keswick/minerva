# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Deploy Frontend

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: minerva/frontend
  ECS_SERVICE: frontend
  ECS_CLUSTER: minerva
  ECS_TASK_DEFINITION: ./frontend/aws/frontend-task-definition.json
  CONTAINER_NAME: frontend
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::777680051979:role/github-deployer

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@9149ade017c57f86dea2f76a01f8b2d5bd06b10f

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Authorise Runner To Access DB
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id sg-073338504589ab37f  \
            --protocol tcp \
            --port 5432 \
            --cidr $(curl -s https://api.ipify.org)/32

      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: '16.17.1'

      - name: Run Migration
        run: |
          npm install prisma@4.4.0
          npx prisma migrate deploy

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        uses: docker/build-push-action@v3
        env:
        with:
          context: .
          file: frontend/Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY}}:${{ github.sha }}
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          secrets: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY}}:${{ github.sha }}

      - name: Revoke Runner To Access DB
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id sg-073338504589ab37f  \
            --protocol tcp \
            --port 5432 \
            --cidr $(curl -s https://api.ipify.org)/32

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@3cc43061dd30ad47511af35bca46e2c1435b9035
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
